[{"/home/sayone/dashboard-git/src/index.js":"1","/home/sayone/dashboard-git/src/App.js":"2","/home/sayone/dashboard-git/src/reportWebVitals.js":"3","/home/sayone/dashboard-git/src/firebase.js":"4","/home/sayone/dashboard-git/src/routes.js":"5","/home/sayone/dashboard-git/src/components/GlobalStyles.jsx":"6","/home/sayone/dashboard-git/src/theme/index.jsx":"7","/home/sayone/dashboard-git/src/views/user/LoginView.jsx":"8","/home/sayone/dashboard-git/src/views/user/RegisterView.jsx":"9","/home/sayone/dashboard-git/src/views/dashboard/index.jsx":"10","/home/sayone/dashboard-git/src/layouts/MainLayout/index.jsx":"11","/home/sayone/dashboard-git/src/layouts/DashboardLayout/index.jsx":"12","/home/sayone/dashboard-git/src/theme/shadows.jsx":"13","/home/sayone/dashboard-git/src/theme/typography.jsx":"14","/home/sayone/dashboard-git/src/layouts/DashboardLayout/TopBar.jsx":"15","/home/sayone/dashboard-git/src/layouts/MainLayout/TopBar.jsx":"16","/home/sayone/dashboard-git/src/layouts/DashboardLayout/NavBar/index.jsx":"17","/home/sayone/dashboard-git/src/components/Logo.jsx":"18","/home/sayone/dashboard-git/src/layouts/DashboardLayout/NavBar/NavItem.jsx":"19","/home/sayone/dashboard-git/src/components/Page.jsx":"20","/home/sayone/dashboard-git/src/views/dashboard/Planning.jsx":"21","/home/sayone/dashboard-git/src/components/Modal.jsx":"22","/home/sayone/dashboard-git/src/views/dashboard/Development.jsx":"23","/home/sayone/dashboard-git/src/views/dashboard/Design.jsx":"24","/home/sayone/dashboard-git/src/views/dashboard/Users.jsx":"25","/home/sayone/dashboard-git/src/redux/store.jsx":"26","/home/sayone/dashboard-git/src/redux/rootReducer.jsx":"27","/home/sayone/dashboard-git/src/redux/userLogin/LoginReducer.jsx":"28","/home/sayone/dashboard-git/src/redux/userLogin/LoginTypes.jsx":"29","/home/sayone/dashboard-git/src/redux/index.jsx":"30","/home/sayone/dashboard-git/src/redux/userLogin/LoginAction.jsx":"31","/home/sayone/dashboard-git/src/components/Loader.jsx":"32","/home/sayone/dashboard-git/src/redux/userList/ListAction.jsx":"33","/home/sayone/dashboard-git/src/redux/userList/ListType.jsx":"34","/home/sayone/dashboard-git/src/redux/userList/ListReducer.jsx":"35","/home/sayone/dashboard-git/src/redux/userRegistration/RegisterReducer.jsx":"36","/home/sayone/dashboard-git/src/redux/userRegistration/RegisterType.jsx":"37","/home/sayone/dashboard-git/src/redux/userRegistration/RegisterAction.jsx":"38","/home/sayone/dashboard-git/src/views/user/TermsConditions.jsx":"39","/home/sayone/dashboard-git/src/views/error/PageNotFound.jsx":"40"},{"size":593,"mtime":1609772168862,"results":"41","hashOfConfig":"42"},{"size":925,"mtime":1610438821824,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1609748602698,"results":"44","hashOfConfig":"42"},{"size":1387,"mtime":1609918655247,"results":"45","hashOfConfig":"42"},{"size":1140,"mtime":1610539306964,"results":"46","hashOfConfig":"42"},{"size":672,"mtime":1609839798599,"results":"47","hashOfConfig":"42"},{"size":798,"mtime":1610024691833,"results":"48","hashOfConfig":"42"},{"size":6460,"mtime":1610526286832,"results":"49","hashOfConfig":"42"},{"size":7672,"mtime":1610538061316,"results":"50","hashOfConfig":"42"},{"size":2589,"mtime":1610108385468,"results":"51","hashOfConfig":"42"},{"size":1001,"mtime":1609926288887,"results":"52","hashOfConfig":"42"},{"size":1717,"mtime":1610516333699,"results":"53","hashOfConfig":"42"},{"size":1642,"mtime":1610025102489,"results":"54","hashOfConfig":"42"},{"size":583,"mtime":1610025073134,"results":"55","hashOfConfig":"42"},{"size":1639,"mtime":1610025213897,"results":"56","hashOfConfig":"42"},{"size":760,"mtime":1609925964679,"results":"57","hashOfConfig":"42"},{"size":4720,"mtime":1610438661289,"results":"58","hashOfConfig":"42"},{"size":191,"mtime":1610436667586,"results":"59","hashOfConfig":"42"},{"size":1637,"mtime":1609826546162,"results":"60","hashOfConfig":"42"},{"size":462,"mtime":1609832841574,"results":"61","hashOfConfig":"42"},{"size":2607,"mtime":1610024528145,"results":"62","hashOfConfig":"42"},{"size":1306,"mtime":1610024371643,"results":"63","hashOfConfig":"42"},{"size":3666,"mtime":1610023304919,"results":"64","hashOfConfig":"42"},{"size":2177,"mtime":1610024435151,"results":"65","hashOfConfig":"42"},{"size":6547,"mtime":1610521557248,"results":"66","hashOfConfig":"42"},{"size":253,"mtime":1610516368234,"results":"67","hashOfConfig":"42"},{"size":362,"mtime":1610526031096,"results":"68","hashOfConfig":"42"},{"size":747,"mtime":1610436549859,"results":"69","hashOfConfig":"42"},{"size":168,"mtime":1610347059563,"results":"70","hashOfConfig":"42"},{"size":384,"mtime":1610526117910,"results":"71","hashOfConfig":"42"},{"size":946,"mtime":1610435603817,"results":"72","hashOfConfig":"42"},{"size":193,"mtime":1610516312012,"results":"73","hashOfConfig":"42"},{"size":640,"mtime":1610459832247,"results":"74","hashOfConfig":"42"},{"size":192,"mtime":1610449290418,"results":"75","hashOfConfig":"42"},{"size":900,"mtime":1610521137146,"results":"76","hashOfConfig":"42"},{"size":783,"mtime":1610527009416,"results":"77","hashOfConfig":"42"},{"size":186,"mtime":1610525572437,"results":"78","hashOfConfig":"42"},{"size":633,"mtime":1610528384512,"results":"79","hashOfConfig":"42"},{"size":4843,"mtime":1610535750370,"results":"80","hashOfConfig":"42"},{"size":1301,"mtime":1610546394524,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1t32ybd",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sayone/dashboard-git/src/index.js",[],["165","166"],"/home/sayone/dashboard-git/src/App.js",[],"/home/sayone/dashboard-git/src/reportWebVitals.js",[],"/home/sayone/dashboard-git/src/firebase.js",[],"/home/sayone/dashboard-git/src/routes.js",[],"/home/sayone/dashboard-git/src/components/GlobalStyles.jsx",[],"/home/sayone/dashboard-git/src/theme/index.jsx",[],"/home/sayone/dashboard-git/src/views/user/LoginView.jsx",[],"/home/sayone/dashboard-git/src/views/user/RegisterView.jsx",["167"],"import React, { useState } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport { connect } from \"react-redux\";\nimport {\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterFailure,\n  userRegister,\n} from \"../../redux\";\nimport ModalBox from \"../../components/Modal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Must be a valid email\")\n    .max(255)\n    .required(\"Email is required\"),\n  firstName: Yup.string()\n    .max(255)\n    .required(\"First name is required\"),\n  lastName: Yup.string()\n    .max(255)\n    .required(\"Last name is required\"),\n  password: Yup.string()\n    .max(255)\n    .required(\"password is required\"),\n  policy: Yup.boolean().oneOf([true], \"This field must be checked\"),\n});\nconst initialValues = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  password: \"\",\n  policy: false,\n};\n\nconst RegisterView = (props) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [modal, setModal] = useState(false);\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n\n  const modalClose = () => {\n    setModal(false);\n    // navigate(\"/user/dashboard\");\n  };\n\n  const onRegister = (values) => {\n    props.userRegisterRequest();\n    let data = { email: values.email, password: values.password };\n    props\n      .userRegister(data)\n      .then((response) => {\n        if (response.status === 200) {\n          props.userRegisterSuccess(response.data.token);\n          setModal(true);\n          setRegisterMessage(\"Registration Success, Logn Now\");\n        }\n      })\n      .catch((error) => {\n        props.userRegisterFailure(error.message);\n        setModal(true);\n        setRegisterMessage(\"Registration Failed\");\n      });\n  };\n\n  return (\n    <Page className={classes.root} title=\"Register\">\n      <ModalBox\n        modal={modal}\n        message={registerMessage}\n        closeModal={modalClose}\n      />\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onRegister}\n          >\n            {(formik) => {\n              const {\n                values,\n                touched,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isValid,\n                dirty,\n              } = formik;\n              return (\n                <form onSubmit={handleSubmit}>\n                  <Box mb={3}>\n                    <Typography color=\"textPrimary\" variant=\"h2\">\n                      Create new account\n                    </Typography>\n                  </Box>\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First name\"\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last name\"\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                  <Box alignItems=\"center\" display=\"flex\" ml={-1}>\n                    <Checkbox\n                      checked={values.policy}\n                      name=\"policy\"\n                      onChange={handleChange}\n                    />\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                      I have read the{\" \"}\n                      <Link\n                        color=\"primary\"\n                        component={RouterLink}\n                        to=\"/termsconditios\"\n                        underline=\"always\"\n                        variant=\"h6\"\n                        target=\"_blank\"\n                      >\n                        Terms and Conditions\n                      </Link>\n                    </Typography>\n                  </Box>\n                  {Boolean(touched.policy && errors.policy) && (\n                    <FormHelperText error>{errors.policy}</FormHelperText>\n                  )}\n                  <Box my={2}>\n                    <Button\n                      color=\"primary\"\n                      disabled={!(dirty && isValid)}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Sign up now\n                    </Button>\n                  </Box>\n                  <Typography color=\"textSecondary\" variant=\"body1\">\n                    Have an account?{\" \"}\n                    <Link component={RouterLink} to=\"/login\" variant=\"h6\">\n                      Sign in\n                    </Link>\n                  </Typography>\n                </form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { registerData: state.registerRed };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userRegister: (registerInput) => dispatch(userRegister(registerInput)),\n    userRegisterRequest: () => dispatch(userRegisterRequest()),\n    userRegisterSuccess: (registerToken) =>\n      dispatch(userRegisterSuccess(registerToken)),\n    userRegisterFailure: (registerError) =>\n      dispatch(userRegisterFailure(registerError)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterView);\n\n// export default RegisterView;\n","/home/sayone/dashboard-git/src/views/dashboard/index.jsx",[],"/home/sayone/dashboard-git/src/layouts/MainLayout/index.jsx",[],"/home/sayone/dashboard-git/src/layouts/DashboardLayout/index.jsx",[],"/home/sayone/dashboard-git/src/theme/shadows.jsx",[],"/home/sayone/dashboard-git/src/theme/typography.jsx",[],"/home/sayone/dashboard-git/src/layouts/DashboardLayout/TopBar.jsx",[],"/home/sayone/dashboard-git/src/layouts/MainLayout/TopBar.jsx",[],"/home/sayone/dashboard-git/src/layouts/DashboardLayout/NavBar/index.jsx",[],"/home/sayone/dashboard-git/src/components/Logo.jsx",[],"/home/sayone/dashboard-git/src/layouts/DashboardLayout/NavBar/NavItem.jsx",[],"/home/sayone/dashboard-git/src/components/Page.jsx",[],"/home/sayone/dashboard-git/src/views/dashboard/Planning.jsx",[],"/home/sayone/dashboard-git/src/components/Modal.jsx",[],"/home/sayone/dashboard-git/src/views/dashboard/Development.jsx",[],"/home/sayone/dashboard-git/src/views/dashboard/Design.jsx",[],"/home/sayone/dashboard-git/src/views/dashboard/Users.jsx",["168"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\n// import moment from \"moment\";\n// import { v4 as uuid } from \"uuid\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  // TableSortLabel,\n  // Tooltip,\n  makeStyles,\n  TablePagination,\n  TableContainer,\n} from \"@material-ui/core\";\nimport {\n  userlistFetchRequest,\n  userlistFetchSuccess,\n  userlistFetchFailure,\n  fetchUserlist,\n} from \"../../redux\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\n\n// const datas = [\n//   {\n//     id: uuid(),\n//     ref: \"CDD1049\",\n//     amount: 30.5,\n//     customer: {\n//       name: \"Ekaterina Tankova\",\n//     },\n//     createdAt: 1555016400000,\n//     status: \"pending\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1048\",\n//     amount: 25.1,\n//     customer: {\n//       name: \"Cao Yu\",\n//     },\n//     createdAt: 1555016400000,\n//     status: \"delivered\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1047\",\n//     amount: 10.99,\n//     customer: {\n//       name: \"Alexa Richardson\",\n//     },\n//     createdAt: 1554930000000,\n//     status: \"refunded\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1046\",\n//     amount: 96.43,\n//     customer: {\n//       name: \"Anje Keizer\",\n//     },\n//     createdAt: 1554757200000,\n//     status: \"pending\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1045\",\n//     amount: 32.54,\n//     customer: {\n//       name: \"Clarke Gillebert\",\n//     },\n//     createdAt: 1554670800000,\n//     status: \"delivered\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1044\",\n//     amount: 16.76,\n//     customer: {\n//       name: \"Adam Denisov\",\n//     },\n//     createdAt: 1554670800000,\n//     status: \"delivered\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1044\",\n//     amount: 16.76,\n//     customer: {\n//       name: \"Adam Denisov\",\n//     },\n//     createdAt: 1554670800000,\n//     status: \"delivered\",\n//   },\n//   {\n//     id: uuid(),\n//     ref: \"CDD1044\",\n//     amount: 16.76,\n//     customer: {\n//       name: \"Adam Denisov\",\n//     },\n//     createdAt: 1554670800000,\n//     status: \"delivered\",\n//   },\n// ];\nconst useStyle = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: \"flex-end\",\n  },\n  avatar: {\n    width: 45,\n    height: 45,\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst User = (props, { className, ...rest }) => {\n  const classes = useStyle();\n  const [page, setPage] = useState(0);\n  // const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    fetchList(page);\n  }, [page]);\n\n  const fetchList = (page) => {\n    setPage(page);\n    props.userlistFetchRequest();\n    props\n      .getUserList(page + 1)\n      .then((response) => {\n        props.userlistFetchSuccess(response.data.data, response.data.total);\n      })\n      .catch((error) => {\n        props.userlistFetchFailure(error.message);\n      });\n  };\n\n  const handleChangePage = (event, newPage) => {\n    fetchList(newPage);\n    // setPage(newPage);\n    // props\n    //   .getUserList(newPage + 1)\n    //   .then((response) => {\n    //     props.userlistFetchSuccess(response.data.data, response.data.total);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error.message);\n    //   });\n  };\n  // const handleChangeRowsPerPage = (event) => {\n  //   setRowsPerPage(parseInt(event.target.value, 10));\n  //   setPage(0);\n  // };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Our Users\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={600} minHeight={400}>\n          {props.loading && <Loader />}\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User ID</TableCell>\n                  <TableCell>First Name</TableCell>\n                  <TableCell sortDirection=\"asc\">\n                    {/* <Tooltip enterDelay={100} title=\"Sort\">\n                      <TableSortLabel active direction=\"asc\"> */}\n                    Second Name\n                    {/* </TableSortLabel>\n                    </Tooltip> */}\n                  </TableCell>\n                  <TableCell>Photo </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.userlistData\n                  // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((user) => (\n                    <TableRow hover key={user.id} tabIndex={-1}>\n                      <TableCell>{user.id}</TableCell>\n                      <TableCell>{user.first_name}</TableCell>\n                      <TableCell>\n                        {user.last_name}\n                        {/* {moment(user.createdAt).format(\"DD/MM/YYYY\")} */}\n                      </TableCell>\n                      <TableCell>\n                        <Avatar className={classes.avatar} src={user.avatar} />\n                        {/* <Chip\n                          color=\"primary\"\n                          label={user.status}\n                          size=\"small\"\n                        /> */}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            // rowsPerPageOptions={[5, 10, 25]}\n            rowsPerPageOptions={6}\n            component=\"div\"\n            count={props.totalUser}\n            // rowsPerPage={rowsPerPage}\n            rowsPerPage={6}\n            page={page}\n            onChangePage={handleChangePage}\n            // onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userlistData: state.listRed.userList,\n    totalUser: state.listRed.totalUser,\n    loading: state.listRed.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUserList: (currentPage) => dispatch(fetchUserlist(currentPage)),\n    userlistFetchRequest: () => dispatch(userlistFetchRequest()),\n    userlistFetchSuccess: (userList, totalUser) =>\n      dispatch(userlistFetchSuccess(userList, totalUser)),\n    userlistFetchFailure: (error) => dispatch(userlistFetchFailure(error)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n// export default User;\n","/home/sayone/dashboard-git/src/redux/store.jsx",[],"/home/sayone/dashboard-git/src/redux/rootReducer.jsx",[],"/home/sayone/dashboard-git/src/redux/userLogin/LoginReducer.jsx",[],"/home/sayone/dashboard-git/src/redux/userLogin/LoginTypes.jsx",[],"/home/sayone/dashboard-git/src/redux/index.jsx",[],"/home/sayone/dashboard-git/src/redux/userLogin/LoginAction.jsx",[],"/home/sayone/dashboard-git/src/components/Loader.jsx",[],"/home/sayone/dashboard-git/src/redux/userList/ListAction.jsx",[],"/home/sayone/dashboard-git/src/redux/userList/ListType.jsx",[],"/home/sayone/dashboard-git/src/redux/userList/ListReducer.jsx",[],"/home/sayone/dashboard-git/src/redux/userRegistration/RegisterReducer.jsx",[],"/home/sayone/dashboard-git/src/redux/userRegistration/RegisterType.jsx",[],"/home/sayone/dashboard-git/src/redux/userRegistration/RegisterAction.jsx",[],"/home/sayone/dashboard-git/src/views/user/TermsConditions.jsx",[],"/home/sayone/dashboard-git/src/views/error/PageNotFound.jsx",["169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":61,"column":9,"nodeType":"176","messageId":"177","endLine":61,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":137,"column":6,"nodeType":"180","endLine":137,"endColumn":12,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":2,"column":15,"nodeType":"176","messageId":"177","endLine":2,"endColumn":24},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchList'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [fetchList, page]",{"range":"188","text":"189"},[2732,2738],"[fetchList, page]"]